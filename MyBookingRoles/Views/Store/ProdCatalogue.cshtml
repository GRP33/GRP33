@model IEnumerable<MyBookingRoles.Models.Store.Product>
@using MyBookingRoles.Models.Store
@{
    ViewBag.Title = "Product Catalogue";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using (Html.BeginForm("ProdCatalogue", "Store", FormMethod.Get))
{
    <div class="row" style="background-color: black; padding: 5px">
        <div class="col-md-2">
            <h4>Product Catalogue </h4>
        </div>
        <div class="col-md-2">
            @Html.TextBox("searchWord", null, null, new { @class = "form-control" })
        </div>
        <div class="col-md-2">
            <input type="submit" value="Search Product" class="btn btn-success" />
        </div>
    </div>
}
<br />
<div class="jumbotron" style="text-align: center;">
    Image Here.
</div>


<div class="row" style="padding: 5px">
    @if (Model.Count() == 0)
    {
        <h5>
            No Products Could Be Found. 
        </h5>
    }
    else
    {
        foreach (var item in Model)
        {
            var base64 = "";
            var imgsrc = "";

            <div class="col-md-4" style="border-left: 1px solid black; padding: 5px;">
                <div class="panel-primary" style="border: 1px solid white; padding: 5px;">
                    @if (item.ProductPics != null)
                    {
                        base64 = Convert.ToBase64String(item.ProductPics);
                        imgsrc = string.Format("data:image/gif;base64,{0}", base64);

                        <center><img src='@imgsrc' style="width:300px;height:290px" class="img-responsive" /></center>
                    }
                </div>
                <hr />
                <div class="panel-body" style="border: 1px solid white; padding: 5px; background-color: silver;">

                    <div class="info text-center">
                        <h3>
                            <u>@Html.DisplayFor(modelItem => item.ProductName)</u>
                        </h3>
                        <p>
                            Available In-Store : <b><u>@Html.DisplayFor(modelItem => item.InStoreQuantity)</u></b> items.
                        </p>
                        <p>
                            <b>R @Html.DisplayFor(modelItem => item.Price)</b> | 
                            <b>Discount : R </b>
                        </p>

                        <p>
                            <div>
                                @Html.ActionLink("Order Now", "OrderNow", "ShoppingCart", new { id = item.ProductID }, new { @class = "btn btn-success" }) |
                                @Html.ActionLink("Details", "Details", "Store", new { id = item.ProductID }, new { @class = "btn btn-success" })
                            </div>
                        </p>
                    </div>
                </div>
            </div>
        }
    }
</div>
<hr />
<div>
    @Html.ActionLink("Back to Full List", "ProdCatalogue", null, new { @class = "btn btn-primary" })
    |
    @Html.ActionLink("Back to  Home Page", "Index", "Home", null, new { @class = "btn btn-default" })
</div>